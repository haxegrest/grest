package grest.networkmanagement.v1.types;
@:enum abstract Step_state(String) from String to String to tink.Stringly {
	var ABORT = "ABORT";
	var APPLY_EGRESS_FIREWALL_RULE = "APPLY_EGRESS_FIREWALL_RULE";
	var APPLY_FORWARDING_RULE = "APPLY_FORWARDING_RULE";
	var APPLY_INGRESS_FIREWALL_RULE = "APPLY_INGRESS_FIREWALL_RULE";
	var APPLY_ROUTE = "APPLY_ROUTE";
	var ARRIVE_AT_EXTERNAL_LOAD_BALANCER = "ARRIVE_AT_EXTERNAL_LOAD_BALANCER";
	var ARRIVE_AT_INSTANCE = "ARRIVE_AT_INSTANCE";
	var ARRIVE_AT_INTERNAL_LOAD_BALANCER = "ARRIVE_AT_INTERNAL_LOAD_BALANCER";
	var ARRIVE_AT_VPN_GATEWAY = "ARRIVE_AT_VPN_GATEWAY";
	var ARRIVE_AT_VPN_TUNNEL = "ARRIVE_AT_VPN_TUNNEL";
	var DELIVER = "DELIVER";
	var DROP = "DROP";
	var FORWARD = "FORWARD";
	var NAT = "NAT";
	var PROXY_CONNECTION = "PROXY_CONNECTION";
	var SPOOFING_APPROVED = "SPOOFING_APPROVED";
	var START_FROM_CLOUD_SQL_INSTANCE = "START_FROM_CLOUD_SQL_INSTANCE";
	var START_FROM_GKE_MASTER = "START_FROM_GKE_MASTER";
	var START_FROM_INSTANCE = "START_FROM_INSTANCE";
	var START_FROM_INTERNET = "START_FROM_INTERNET";
	var START_FROM_PRIVATE_NETWORK = "START_FROM_PRIVATE_NETWORK";
	var STATE_UNSPECIFIED = "STATE_UNSPECIFIED";
	var VIEWER_PERMISSION_MISSING = "VIEWER_PERMISSION_MISSING";
}