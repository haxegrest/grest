package grest.networkmanagement.v1.types;
@:enum abstract DropInfo_cause(String) from String to String to tink.Stringly {
	var CAUSE_UNSPECIFIED = "CAUSE_UNSPECIFIED";
	var CLOUD_SQL_INSTANCE_NO_IP_ADDRESS = "CLOUD_SQL_INSTANCE_NO_IP_ADDRESS";
	var CLOUD_SQL_INSTANCE_UNAUTHORIZED_ACCESS = "CLOUD_SQL_INSTANCE_UNAUTHORIZED_ACCESS";
	var DROPPED_INSIDE_CLOUD_SQL_SERVICE = "DROPPED_INSIDE_CLOUD_SQL_SERVICE";
	var DROPPED_INSIDE_GKE_SERVICE = "DROPPED_INSIDE_GKE_SERVICE";
	var FIREWALL_BLOCKING_LOAD_BALANCER_BACKEND_HEALTH_CHECK = "FIREWALL_BLOCKING_LOAD_BALANCER_BACKEND_HEALTH_CHECK";
	var FIREWALL_RULE = "FIREWALL_RULE";
	var FOREIGN_IP_DISALLOWED = "FOREIGN_IP_DISALLOWED";
	var FORWARDING_RULE_MISMATCH = "FORWARDING_RULE_MISMATCH";
	var FORWARDING_RULE_NO_INSTANCES = "FORWARDING_RULE_NO_INSTANCES";
	var GKE_MASTER_UNAUTHORIZED_ACCESS = "GKE_MASTER_UNAUTHORIZED_ACCESS";
	var GOOGLE_MANAGED_SERVICE_NO_PEERING = "GOOGLE_MANAGED_SERVICE_NO_PEERING";
	var INSTANCE_NOT_RUNNING = "INSTANCE_NOT_RUNNING";
	var NO_EXTERNAL_ADDRESS = "NO_EXTERNAL_ADDRESS";
	var NO_ROUTE = "NO_ROUTE";
	var PRIVATE_GOOGLE_ACCESS_DISALLOWED = "PRIVATE_GOOGLE_ACCESS_DISALLOWED";
	var PRIVATE_TRAFFIC_TO_INTERNET = "PRIVATE_TRAFFIC_TO_INTERNET";
	var ROUTE_BLACKHOLE = "ROUTE_BLACKHOLE";
	var ROUTE_WRONG_NETWORK = "ROUTE_WRONG_NETWORK";
	var TRAFFIC_TYPE_BLOCKED = "TRAFFIC_TYPE_BLOCKED";
	var UNKNOWN_EXTERNAL_ADDRESS = "UNKNOWN_EXTERNAL_ADDRESS";
	var UNKNOWN_INTERNAL_ADDRESS = "UNKNOWN_INTERNAL_ADDRESS";
}