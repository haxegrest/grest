package grest.sqladmin.v1beta4.types;
typedef DatabaseInstance = {
	/**
		 *SECOND_GEN*: Cloud SQL database instance. *EXTERNAL*: A database server that is not managed by Google. This property is read-only; use the *tier* property in the *settings* object to determine the database type.
	**/
	@:optional
	var backendType : grest.sqladmin.v1beta4.types.DatabaseInstance_backendType;
	/**
		Connection name of the Cloud SQL instance used in connection strings.
	**/
	@:optional
	var connectionName : String;
	/**
		The current disk usage of the instance in bytes. This property has been deprecated. Use the "cloudsql.googleapis.com/database/disk/bytes_used" metric in Cloud Monitoring API instead. Please see this announcement for details.
	**/
	@:optional
	var currentDiskSize : String;
	/**
		The database engine type and version. The *databaseVersion* field cannot be changed after instance creation. MySQL instances: *MYSQL_8_0*, *MYSQL_5_7* (default), or *MYSQL_5_6*. PostgreSQL instances: *POSTGRES_9_6*, *POSTGRES_10*, *POSTGRES_11*, *POSTGRES_12*, or *POSTGRES_13* (default). SQL Server instances: *SQLSERVER_2017_STANDARD* (default), *SQLSERVER_2017_ENTERPRISE*, *SQLSERVER_2017_EXPRESS*, or *SQLSERVER_2017_WEB*.
	**/
	@:optional
	var databaseVersion : grest.sqladmin.v1beta4.types.DatabaseInstance_databaseVersion;
	/**
		Disk encryption configuration specific to an instance. Applies only to Second Generation instances.
	**/
	@:optional
	var diskEncryptionConfiguration : DiskEncryptionConfiguration;
	/**
		Disk encryption status specific to an instance. Applies only to Second Generation instances.
	**/
	@:optional
	var diskEncryptionStatus : DiskEncryptionStatus;
	/**
		This field is deprecated and will be removed from a future version of the API. Use the *settings.settingsVersion* field instead.
	**/
	@:optional
	var etag : String;
	/**
		The name and status of the failover replica. This property is applicable only to Second Generation instances.
	**/
	@:optional
	var failoverReplica : { var available : Bool; var name : String; };
	/**
		The Compute Engine zone that the instance is currently serving from. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary zone.
	**/
	@:optional
	var gceZone : String;
	/**
		The instance type. This can be one of the following. *CLOUD_SQL_INSTANCE*: A Cloud SQL instance that is not replicating from a primary instance. *ON_PREMISES_INSTANCE*: An instance running on the customer's premises. *READ_REPLICA_INSTANCE*: A Cloud SQL instance configured as a read-replica.
	**/
	@:optional
	var instanceType : grest.sqladmin.v1beta4.types.DatabaseInstance_instanceType;
	/**
		The assigned IP addresses for the instance.
	**/
	@:optional
	var ipAddresses : Array<IpMapping>;
	/**
		The IPv6 address assigned to the instance. (Deprecated) This property was applicable only to First Generation instances.
	**/
	@:optional
	var ipv6Address : String;
	/**
		This is always *sql#instance*.
	**/
	@:optional
	var kind : String;
	/**
		The name of the instance which will act as primary in the replication setup.
	**/
	@:optional
	var masterInstanceName : String;
	/**
		The maximum disk size of the instance in bytes.
	**/
	@:optional
	var maxDiskSize : String;
	/**
		Name of the Cloud SQL instance. This does not include the project ID.
	**/
	@:optional
	var name : String;
	/**
		Configuration specific to on-premises instances.
	**/
	@:optional
	var onPremisesConfiguration : OnPremisesConfiguration;
	/**
		This field represents the report generated by the proactive database wellness job for OutOfDisk issues. Writers: -- the proactive database wellness job for OOD. Readers: -- the proactive database wellness job
	**/
	@:optional
	var outOfDiskReport : SqlOutOfDiskReport;
	/**
		The project ID of the project containing the Cloud SQL instance. The Google apps domain is prefixed if applicable.
	**/
	@:optional
	var project : String;
	/**
		The geographical region. Can be *us-central* (*FIRST_GEN* instances only) *us-central1* (*SECOND_GEN* instances only) *asia-east1* or *europe-west1*. Defaults to *us-central* or *us-central1* depending on the instance type. The region cannot be changed after instance creation.
	**/
	@:optional
	var region : String;
	/**
		Configuration specific to failover replicas and read replicas.
	**/
	@:optional
	var replicaConfiguration : ReplicaConfiguration;
	/**
		The replicas of the instance.
	**/
	@:optional
	var replicaNames : Array<String>;
	/**
		Initial root password. Use only on creation.
	**/
	@:optional
	var rootPassword : String;
	/**
		The status indicating if instance satisfiesPzs. Reserved for future use.
	**/
	@:optional
	var satisfiesPzs : Bool;
	/**
		The start time of any upcoming scheduled maintenance for this instance.
	**/
	@:optional
	var scheduledMaintenance : SqlScheduledMaintenance;
	/**
		The Compute Engine zone that the failover instance is currently serving from for a regional instance. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary/failover zone. Reserved for future use.
	**/
	@:optional
	var secondaryGceZone : String;
	/**
		The URI of this resource.
	**/
	@:optional
	var selfLink : String;
	/**
		SSL configuration.
	**/
	@:optional
	var serverCaCert : SslCert;
	/**
		The service account email address assigned to the instance. This property is read-only.
	**/
	@:optional
	var serviceAccountEmailAddress : String;
	/**
		The user settings.
	**/
	@:optional
	var settings : Settings;
	/**
		The current serving state of the Cloud SQL instance. This can be one of the following. *SQL_INSTANCE_STATE_UNSPECIFIED*: The state of the instance is unknown. *RUNNABLE*: The instance is running, or has been stopped by owner. *SUSPENDED*: The instance is not available, for example due to problems with billing. *PENDING_DELETE*: The instance is being deleted. *PENDING_CREATE*: The instance is being created. *MAINTENANCE*: The instance is down for maintenance. *FAILED*: The instance creation failed.
	**/
	@:optional
	var state : grest.sqladmin.v1beta4.types.DatabaseInstance_state;
	/**
		If the instance state is SUSPENDED, the reason for the suspension.
	**/
	@:optional
	var suspensionReason : Array<String>;
}