package grest.clouddebugger.v2.types;
typedef Debuggee = {
	/**
		Version ID of the agent. Schema: `domain/language-platform/vmajor.minor` (for example `google.com/java-gcp/v1.1`).
	**/
	@:optional
	var agentVersion : String;
	/**
		Used when setting breakpoint canary for this debuggee.
	**/
	@:optional
	var canaryMode : grest.clouddebugger.v2.types.Debuggee_canaryMode;
	/**
		Human readable description of the debuggee. Including a human-readable project name, environment name and version information is recommended.
	**/
	@:optional
	var description : String;
	/**
		References to the locations and revisions of the source code used in the deployed application.
	**/
	@:optional
	var extSourceContexts : Array<ExtendedSourceContext>;
	/**
		Unique identifier for the debuggee generated by the controller service.
	**/
	@:optional
	var id : String;
	/**
		If set to `true`, indicates that the agent should disable itself and detach from the debuggee.
	**/
	@:optional
	var isDisabled : Bool;
	/**
		If set to `true`, indicates that Controller service does not detect any activity from the debuggee agents and the application is possibly stopped.
	**/
	@:optional
	var isInactive : Bool;
	/**
		A set of custom debuggee properties, populated by the agent, to be displayed to the user.
	**/
	@:optional
	var labels : haxe.DynamicAccess<String>;
	/**
		Project the debuggee is associated with. Use project number or id when registering a Google Cloud Platform project.
	**/
	@:optional
	var project : String;
	/**
		References to the locations and revisions of the source code used in the deployed application.
	**/
	@:optional
	var sourceContexts : Array<SourceContext>;
	/**
		Human readable message to be displayed to the user about this debuggee. Absence of this field indicates no status. The message can be either informational or an error status.
	**/
	@:optional
	var status : StatusMessage;
	/**
		Uniquifier to further distinguish the application. It is possible that different applications might have identical values in the debuggee message, thus, incorrectly identified as a single application by the Controller service. This field adds salt to further distinguish the application. Agents should consider seeding this field with value that identifies the code, binary, configuration and environment.
	**/
	@:optional
	var uniquifier : String;
}