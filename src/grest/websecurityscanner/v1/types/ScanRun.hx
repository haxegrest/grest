package grest.websecurityscanner.v1.types;
typedef ScanRun = {
	/**
		Output only. The time at which the ScanRun reached termination state - that the ScanRun is either finished or stopped by user.
	**/
	@:optional
	var endTime : String;
	/**
		Output only. If result_state is an ERROR, this field provides the primary reason for scan's termination and more details, if such are available.
	**/
	@:optional
	var errorTrace : ScanRunErrorTrace;
	/**
		Output only. The execution state of the ScanRun.
	**/
	@:optional
	var executionState : grest.websecurityscanner.v1.types.ScanRun_executionState;
	/**
		Output only. Whether the scan run has found any vulnerabilities.
	**/
	@:optional
	var hasVulnerabilities : Bool;
	/**
		Output only. The resource name of the ScanRun. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}/scanRuns/{scanRunId}'. The ScanRun IDs are generated by the system.
	**/
	@:optional
	var name : String;
	/**
		Output only. The percentage of total completion ranging from 0 to 100. If the scan is in queue, the value is 0. If the scan is running, the value ranges from 0 to 100. If the scan is finished, the value is 100.
	**/
	@:optional
	var progressPercent : Int;
	/**
		Output only. The result state of the ScanRun. This field is only available after the execution state reaches "FINISHED".
	**/
	@:optional
	var resultState : grest.websecurityscanner.v1.types.ScanRun_resultState;
	/**
		Output only. The time at which the ScanRun started.
	**/
	@:optional
	var startTime : String;
	/**
		Output only. The number of URLs crawled during this ScanRun. If the scan is in progress, the value represents the number of URLs crawled up to now.
	**/
	@:optional
	var urlsCrawledCount : String;
	/**
		Output only. The number of URLs tested during this ScanRun. If the scan is in progress, the value represents the number of URLs tested up to now. The number of URLs tested is usually larger than the number URLS crawled because typically a crawled URL is tested with multiple test payloads.
	**/
	@:optional
	var urlsTestedCount : String;
	/**
		Output only. A list of warnings, if such are encountered during this scan run.
	**/
	@:optional
	var warningTraces : Array<ScanRunWarningTrace>;
}