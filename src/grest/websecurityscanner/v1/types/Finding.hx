package grest.websecurityscanner.v1.types;
typedef Finding = {
	/**
		Output only. The body of the request that triggered the vulnerability.
	**/
	@:optional
	var body : String;
	/**
		Output only. The description of the vulnerability.
	**/
	@:optional
	var description : String;
	/**
		Output only. The URL where the browser lands when the vulnerability is detected.
	**/
	@:optional
	var finalUrl : String;
	/**
		Output only. The type of the Finding. Detailed and up-to-date information on findings can be found here: https://cloud.google.com/security-command-center/docs/how-to-remediate-web-security-scanner-findings
	**/
	@:optional
	var findingType : String;
	/**
		Output only. An addon containing information reported for a vulnerability with an HTML form, if any.
	**/
	@:optional
	var form : Form;
	/**
		Output only. If the vulnerability was originated from nested IFrame, the immediate parent IFrame is reported.
	**/
	@:optional
	var frameUrl : String;
	/**
		Output only. The URL produced by the server-side fuzzer and used in the request that triggered the vulnerability.
	**/
	@:optional
	var fuzzedUrl : String;
	/**
		Output only. The http method of the request that triggered the vulnerability, in uppercase.
	**/
	@:optional
	var httpMethod : String;
	/**
		Output only. The resource name of the Finding. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}/scanruns/{scanRunId}/findings/{findingId}'. The finding IDs are generated by the system.
	**/
	@:optional
	var name : String;
	/**
		Output only. An addon containing information about outdated libraries.
	**/
	@:optional
	var outdatedLibrary : OutdatedLibrary;
	/**
		Output only. The URL containing human-readable payload that user can leverage to reproduce the vulnerability.
	**/
	@:optional
	var reproductionUrl : String;
	/**
		Output only. The severity level of the reported vulnerability.
	**/
	@:optional
	var severity : grest.websecurityscanner.v1.types.Finding_severity;
	/**
		Output only. The tracking ID uniquely identifies a vulnerability instance across multiple ScanRuns.
	**/
	@:optional
	var trackingId : String;
	/**
		Output only. An addon containing detailed information regarding any resource causing the vulnerability such as JavaScript sources, image, audio files, etc.
	**/
	@:optional
	var violatingResource : ViolatingResource;
	/**
		Output only. An addon containing information about vulnerable or missing HTTP headers.
	**/
	@:optional
	var vulnerableHeaders : VulnerableHeaders;
	/**
		Output only. An addon containing information about request parameters which were found to be vulnerable.
	**/
	@:optional
	var vulnerableParameters : VulnerableParameters;
	/**
		Output only. An addon containing information reported for an XSS, if any.
	**/
	@:optional
	var xss : Xss;
}