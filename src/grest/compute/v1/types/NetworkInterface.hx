package grest.compute.v1.types;
typedef NetworkInterface = {
	/**
		An array of configurations for this interface. Currently, only one access config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified, then this instance will have no external internet access.
	**/
	@:optional
	var accessConfigs : Array<AccessConfig>;
	/**
		An array of alias IP ranges for this network interface. You can only specify this field for network interfaces in VPC networks.
	**/
	@:optional
	var aliasIpRanges : Array<AliasIpRange>;
	/**
		Fingerprint hash of contents stored in this network interface. This field will be ignored when inserting an Instance or adding a NetworkInterface. An up-to-date fingerprint must be provided in order to update the NetworkInterface. The request will fail with error 400 Bad Request if the fingerprint is not provided, or 412 Precondition Failed if the fingerprint is out of date.
	**/
	@:optional
	var fingerprint : String;
	/**
		An array of IPv6 access configurations for this interface. Currently, only one IPv6 access config, DIRECT_IPV6, is supported. If there is no ipv6AccessConfig specified, then this instance will have no external IPv6 Internet access.
	**/
	@:optional
	var ipv6AccessConfigs : Array<AccessConfig>;
	/**
		[Output Only] One of EXTERNAL, INTERNAL to indicate whether the IP can be accessed from the Internet. This field is always inherited from its subnetwork.
		
		Valid only if stackType is IPV4_IPV6.
	**/
	@:optional
	var ipv6AccessType : grest.compute.v1.types.NetworkInterface_ipv6AccessType;
	/**
		[Output Only] An IPv6 internal network address for this network interface.
	**/
	@:optional
	var ipv6Address : String;
	/**
		[Output Only] Type of the resource. Always compute#networkInterface for network interfaces.
	**/
	@:optional
	var kind : String;
	/**
		[Output Only] The name of the network interface, which is generated by the server. For network devices, these are eth0, eth1, etc.
	**/
	@:optional
	var name : String;
	/**
		URL of the network resource for this instance. When creating an instance, if neither the network nor the subnetwork is specified, the default network global/networks/default is used; if the network is not specified but the subnetwork is specified, the network is inferred.
		
		If you specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs:  
		- https://www.googleapis.com/compute/v1/projects/project/global/networks/network 
		- projects/project/global/networks/network 
		- global/networks/default
	**/
	@:optional
	var network : String;
	/**
		An IPv4 internal IP address to assign to the instance for this network interface. If not specified by the user, an unused internal IP is assigned by the system.
	**/
	@:optional
	var networkIP : String;
	/**
		The type of vNIC to be used on this interface. This may be gVNIC or VirtioNet.
	**/
	@:optional
	var nicType : grest.compute.v1.types.NetworkInterface_nicType;
	/**
		The stack type for this network interface to identify whether the IPv6 feature is enabled or not. If not specified, IPV4_ONLY will be used.
		
		This field can be both set at instance creation and update network interface operations.
	**/
	@:optional
	var stackType : grest.compute.v1.types.NetworkInterface_stackType;
	/**
		The URL of the Subnetwork resource for this instance. If the network resource is in legacy mode, do not specify this field. If the network is in auto subnet mode, specifying the subnetwork is optional. If the network is in custom subnet mode, specifying the subnetwork is required. If you specify this field, you can specify the subnetwork as a full or partial URL. For example, the following are all valid URLs:  
		- https://www.googleapis.com/compute/v1/projects/project/regions/region/subnetworks/subnetwork 
		- regions/region/subnetworks/subnetwork
	**/
	@:optional
	var subnetwork : String;
}