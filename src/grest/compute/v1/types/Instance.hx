package grest.compute.v1.types;
typedef Instance = {
	/**
		Controls for advanced machine-related behavior features.
	**/
	@:optional
	var advancedMachineFeatures : AdvancedMachineFeatures;
	/**
		Allows this instance to send and receive packets with non-matching destination or source IPs. This is required if you plan to use this instance to forward routes. For more information, see Enabling IP Forwarding.
	**/
	@:optional
	var canIpForward : Bool;
	@:optional
	var confidentialInstanceConfig : ConfidentialInstanceConfig;
	/**
		[Output Only] The CPU platform used by this instance.
	**/
	@:optional
	var cpuPlatform : String;
	/**
		[Output Only] Creation timestamp in RFC3339 text format.
	**/
	@:optional
	var creationTimestamp : String;
	/**
		Whether the resource should be protected against deletion.
	**/
	@:optional
	var deletionProtection : Bool;
	/**
		An optional description of this resource. Provide this property when you create the resource.
	**/
	@:optional
	var description : String;
	/**
		Array of disks associated with this instance. Persistent disks must be created before you can assign them.
	**/
	@:optional
	var disks : Array<AttachedDisk>;
	/**
		Enables display device for the instance.
	**/
	@:optional
	var displayDevice : DisplayDevice;
	/**
		Specifies a fingerprint for this resource, which is essentially a hash of the instance's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update the instance. You must always provide an up-to-date fingerprint hash in order to update the instance.
		
		To see the latest fingerprint, make get() request to the instance.
	**/
	@:optional
	var fingerprint : String;
	/**
		A list of the type and count of accelerator cards attached to the instance.
	**/
	@:optional
	var guestAccelerators : Array<AcceleratorConfig>;
	/**
		Specifies the hostname of the instance. The specified hostname must be RFC1035 compliant. If hostname is not specified, the default hostname is [INSTANCE_NAME].c.[PROJECT_ID].internal when using the global DNS, and [INSTANCE_NAME].[ZONE].c.[PROJECT_ID].internal when using zonal DNS.
	**/
	@:optional
	var hostname : String;
	/**
		[Output Only] The unique identifier for the resource. This identifier is defined by the server.
	**/
	@:optional
	var id : String;
	/**
		[Output Only] Type of the resource. Always compute#instance for instances.
	**/
	@:optional
	var kind : String;
	/**
		A fingerprint for this request, which is essentially a hash of the label's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels.
		
		To see the latest fingerprint, make get() request to the instance.
	**/
	@:optional
	var labelFingerprint : String;
	/**
		Labels to apply to this instance. These can be later modified by the setLabels method.
	**/
	@:optional
	var labels : haxe.DynamicAccess<String>;
	/**
		[Output Only] Last start timestamp in RFC3339 text format.
	**/
	@:optional
	var lastStartTimestamp : String;
	/**
		[Output Only] Last stop timestamp in RFC3339 text format.
	**/
	@:optional
	var lastStopTimestamp : String;
	/**
		[Output Only] Last suspended timestamp in RFC3339 text format.
	**/
	@:optional
	var lastSuspendedTimestamp : String;
	/**
		Full or partial URL of the machine type resource to use for this instance, in the format: zones/zone/machineTypes/machine-type. This is provided by the client when the instance is created. For example, the following is a valid partial url to a predefined machine type:
		zones/us-central1-f/machineTypes/n1-standard-1
		
		
		To create a custom machine type, provide a URL to a machine type in the following format, where CPUS is 1 or an even number up to 32 (2, 4, 6, ... 24, etc), and MEMORY is the total memory for this instance. Memory must be a multiple of 256 MB and must be supplied in MB (e.g. 5 GB of memory is 5120 MB):
		zones/zone/machineTypes/custom-CPUS-MEMORY
		
		
		For example: zones/us-central1-f/machineTypes/custom-4-5120 
		
		For a full list of restrictions, read the Specifications for custom machine types.
	**/
	@:optional
	var machineType : String;
	/**
		The metadata key/value pairs assigned to this instance. This includes custom metadata and predefined keys.
	**/
	@:optional
	var metadata : Metadata;
	/**
		Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: "Intel Haswell" or minCpuPlatform: "Intel Sandy Bridge".
	**/
	@:optional
	var minCpuPlatform : String;
	/**
		The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	**/
	@:optional
	var name : String;
	/**
		An array of network configurations for this instance. These specify how interfaces are configured to interact with other network services, such as connecting to the internet. Multiple interfaces are supported per instance.
	**/
	@:optional
	var networkInterfaces : Array<NetworkInterface>;
	/**
		The private IPv6 google access type for the VM. If not specified, use  INHERIT_FROM_SUBNETWORK as default.
	**/
	@:optional
	var privateIpv6GoogleAccess : grest.compute.v1.types.Instance_privateIpv6GoogleAccess;
	/**
		Specifies the reservations that this instance can consume from.
	**/
	@:optional
	var reservationAffinity : ReservationAffinity;
	/**
		Resource policies applied to this instance.
	**/
	@:optional
	var resourcePolicies : Array<String>;
	/**
		[Output Only] Reserved for future use.
	**/
	@:optional
	var satisfiesPzs : Bool;
	/**
		Sets the scheduling options for this instance.
	**/
	@:optional
	var scheduling : Scheduling;
	/**
		[Output Only] Server-defined URL for this resource.
	**/
	@:optional
	var selfLink : String;
	/**
		A list of service accounts, with their specified scopes, authorized for this instance. Only one service account per VM instance is supported.
		
		Service accounts generate access tokens that can be accessed through the metadata server and used to authenticate applications on the instance. See Service Accounts for more information.
	**/
	@:optional
	var serviceAccounts : Array<ServiceAccount>;
	@:optional
	var shieldedInstanceConfig : ShieldedInstanceConfig;
	@:optional
	var shieldedInstanceIntegrityPolicy : ShieldedInstanceIntegrityPolicy;
	/**
		[Output Only] Whether a VM has been restricted for start because Compute Engine has detected suspicious activity.
	**/
	@:optional
	var startRestricted : Bool;
	/**
		[Output Only] The status of the instance. One of the following values: PROVISIONING, STAGING, RUNNING, STOPPING, SUSPENDING, SUSPENDED, REPAIRING, and TERMINATED. For more information about the status of the instance, see  Instance life cycle.
	**/
	@:optional
	var status : grest.compute.v1.types.Instance_status;
	/**
		[Output Only] An optional, human-readable explanation of the status.
	**/
	@:optional
	var statusMessage : String;
	/**
		Tags to apply to this instance. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during instance creation. The tags can be later modified by the setTags method. Each tag within the list must comply with RFC1035. Multiple tags can be specified via the 'tags.items' field.
	**/
	@:optional
	var tags : Tags;
	/**
		[Output Only] URL of the zone where the instance resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
	**/
	@:optional
	var zone : String;
}