package grest.compute.v1.types;
typedef Disk = {
	/**
		[Output Only] Creation timestamp in RFC3339 text format.
	**/
	@:optional
	var creationTimestamp : String;
	/**
		An optional description of this resource. Provide this property when you create the resource.
	**/
	@:optional
	var description : String;
	/**
		Encrypts the disk using a customer-supplied encryption key. After you encrypt a disk with a customer-supplied key, you must provide the same key if you use the disk later (e.g. to create a disk snapshot, to create a disk image, to create a machine image, or to attach the disk to a virtual machine). Customer-supplied encryption keys do not protect access to metadata of the disk. If you do not provide an encryption key when creating the disk, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the disk later.
	**/
	@:optional
	var diskEncryptionKey : CustomerEncryptionKey;
	/**
		A list of features to enable on the guest operating system. Applicable only for bootable images. Read Enabling guest operating system features to see a list of available options.
	**/
	@:optional
	var guestOsFeatures : Array<GuestOsFeature>;
	/**
		[Output Only] The unique identifier for the resource. This identifier is defined by the server.
	**/
	@:optional
	var id : String;
	/**
		[Output Only] Type of the resource. Always compute#disk for disks.
	**/
	@:optional
	var kind : String;
	/**
		A fingerprint for the labels being applied to this disk, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels, otherwise the request will fail with error 412 conditionNotMet. To see the latest fingerprint, make a get() request to retrieve a disk.
	**/
	@:optional
	var labelFingerprint : String;
	/**
		Labels to apply to this disk. These can be later modified by the setLabels method.
	**/
	@:optional
	var labels : haxe.DynamicAccess<String>;
	/**
		[Output Only] Last attach timestamp in RFC3339 text format.
	**/
	@:optional
	var lastAttachTimestamp : String;
	/**
		[Output Only] Last detach timestamp in RFC3339 text format.
	**/
	@:optional
	var lastDetachTimestamp : String;
	/**
		Integer license codes indicating which licenses are attached to this disk.
	**/
	@:optional
	var licenseCodes : Array<String>;
	/**
		A list of publicly visible licenses. Reserved for Google's use.
	**/
	@:optional
	var licenses : Array<String>;
	/**
		An opaque location hint used to place the disk close to other resources. This field is for use by internal tools that use the public API.
	**/
	@:optional
	var locationHint : String;
	/**
		Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
	**/
	@:optional
	var name : String;
	/**
		Internal use only.
	**/
	@:optional
	var options : String;
	/**
		Physical block size of the persistent disk, in bytes. If not present in a request, a default value is used. The currently supported size is 4096, other sizes may be added in the future. If an unsupported value is requested, the error message will list the supported values for the caller's project.
	**/
	@:optional
	var physicalBlockSizeBytes : String;
	/**
		Indicates how many IOPS must be provisioned for the disk.
	**/
	@:optional
	var provisionedIops : String;
	/**
		[Output Only] URL of the region where the disk resides. Only applicable for regional resources. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
	**/
	@:optional
	var region : String;
	/**
		URLs of the zones where the disk should be replicated to. Only applicable for regional resources.
	**/
	@:optional
	var replicaZones : Array<String>;
	/**
		Resource policies applied to this disk for automatic snapshot creations.
	**/
	@:optional
	var resourcePolicies : Array<String>;
	/**
		[Output Only] Reserved for future use.
	**/
	@:optional
	var satisfiesPzs : Bool;
	/**
		[Output Only] Server-defined fully-qualified URL for this resource.
	**/
	@:optional
	var selfLink : String;
	/**
		Size, in GB, of the persistent disk. You can specify this field when creating a persistent disk using the sourceImage, sourceSnapshot, or sourceDisk parameter, or specify it alone to create an empty persistent disk. If you specify this field along with a source, the value of sizeGb must not be less than the size of the source. Acceptable values are 1 to 65536, inclusive.
	**/
	@:optional
	var sizeGb : String;
	/**
		The source disk used to create this disk. You can provide this as a partial or full URL to the resource. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project/zones/zone /disks/disk - https://www.googleapis.com/compute/v1/projects/project/regions/region /disks/disk - projects/project/zones/zone/disks/disk - projects/project/regions/region/disks/disk - zones/zone/disks/disk - regions/region/disks/disk 
	**/
	@:optional
	var sourceDisk : String;
	/**
		[Output Only] The unique ID of the disk used to create this disk. This value identifies the exact disk that was used to create this persistent disk. For example, if you created the persistent disk from a disk that was later deleted and recreated under the same name, the source disk ID would identify the exact version of the disk that was used.
	**/
	@:optional
	var sourceDiskId : String;
	/**
		The source image used to create this disk. If the source image is deleted, this field will not be set. To create a disk with one of the public operating system images, specify the image by its family name. For example, specify family/debian-9 to use the latest Debian 9 image: projects/debian-cloud/global/images/family/debian-9 Alternatively, use a specific version of a public operating system image: projects/debian-cloud/global/images/debian-9-stretch-vYYYYMMDD To create a disk with a custom image that you created, specify the image name in the following format: global/images/my-custom-image You can also specify a custom image by its image family, which returns the latest version of the image in that family. Replace the image name with family/family-name: global/images/family/my-image-family 
	**/
	@:optional
	var sourceImage : String;
	/**
		The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key.
	**/
	@:optional
	var sourceImageEncryptionKey : CustomerEncryptionKey;
	/**
		[Output Only] The ID value of the image used to create this disk. This value identifies the exact image that was used to create this persistent disk. For example, if you created the persistent disk from an image that was later deleted and recreated under the same name, the source image ID would identify the exact version of the image that was used.
	**/
	@:optional
	var sourceImageId : String;
	/**
		The source snapshot used to create this disk. You can provide this as a partial or full URL to the resource. For example, the following are valid values: - https://www.googleapis.com/compute/v1/projects/project /global/snapshots/snapshot - projects/project/global/snapshots/snapshot - global/snapshots/snapshot 
	**/
	@:optional
	var sourceSnapshot : String;
	/**
		The customer-supplied encryption key of the source snapshot. Required if the source snapshot is protected by a customer-supplied encryption key.
	**/
	@:optional
	var sourceSnapshotEncryptionKey : CustomerEncryptionKey;
	/**
		[Output Only] The unique ID of the snapshot used to create this disk. This value identifies the exact snapshot that was used to create this persistent disk. For example, if you created the persistent disk from a snapshot that was later deleted and recreated under the same name, the source snapshot ID would identify the exact version of the snapshot that was used.
	**/
	@:optional
	var sourceSnapshotId : String;
	/**
		The full Google Cloud Storage URI where the disk image is stored. This file must be a gzip-compressed tarball whose name ends in .tar.gz or virtual machine disk whose name ends in vmdk. Valid URIs may start with gs:// or https://storage.googleapis.com/. This flag is not optimized for creating multiple disks from a source storage object. To create many disks from a source storage object, use gcloud compute images import instead.
	**/
	@:optional
	var sourceStorageObject : String;
	/**
		[Output Only] The status of disk creation. - CREATING: Disk is provisioning. - RESTORING: Source data is being copied into the disk. - FAILED: Disk creation failed. - READY: Disk is ready for use. - DELETING: Disk is deleting. 
	**/
	@:optional
	var status : grest.compute.v1.types.Disk_status;
	/**
		URL of the disk type resource describing which disk type to use to create the disk. Provide this when creating the disk. For example: projects/project /zones/zone/diskTypes/pd-standard or pd-ssd
	**/
	@:optional
	var type : String;
	/**
		[Output Only] Links to the users of the disk (attached instances) in form: projects/project/zones/zone/instances/instance
	**/
	@:optional
	var users : Array<String>;
	/**
		[Output Only] URL of the zone where the disk resides. You must specify this field as part of the HTTP request URL. It is not settable as a field in the request body.
	**/
	@:optional
	var zone : String;
}